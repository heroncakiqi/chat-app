{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HP\\\\Desktop\\\\chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\chat-app\\\\src\\\\context\\\\GlobalState.js\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport db from '../firebase';\nimport { roomsReducer, ADD_ROOMS } from './reducers';\nexport var Context = React.createContext();\n\nvar GlobalState = function GlobalState(_ref) {\n  var children = _ref.children;\n\n  // set global state\n  var _useState = useState(localStorage.getItem('user') || null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1]; //\n\n\n  var _useReducer = useReducer(roomsReducer, []),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      roomsState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openRoom = _useState4[0],\n      setOpenRoom = _useState4[1]; // define functions\n\n\n  var addRooms = function addRooms(rooms) {\n    db.collection('rooms').onSnapshot(function (snapshot) {\n      var changes = snapshot.docChanges();\n      var snapArray = changes.map(function (item) {\n        return {\n          id: item.doc.id,\n          name: item.doc.data().name\n        };\n      });\n      dispatch({\n        type: ADD_ROOMS,\n        rooms: rooms\n      });\n    });\n  };\n\n  return React.createElement(Context.Provider, {\n    value: {\n      user: user,\n      rooms: roomsState,\n      openRoom: openRoom,\n      addRooms: addRooms\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, children);\n};\n\nexport default GlobalState;","map":{"version":3,"sources":["C:\\Users\\HP\\Desktop\\chat-app\\src\\context\\GlobalState.js"],"names":["React","useState","useEffect","useReducer","db","roomsReducer","ADD_ROOMS","Context","createContext","GlobalState","children","localStorage","getItem","user","setUser","roomsState","dispatch","openRoom","setOpenRoom","addRooms","rooms","collection","onSnapshot","snapshot","changes","docChanges","snapArray","map","item","id","doc","name","data","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,OAAOC,EAAP,MAAe,aAAf;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,YAAxC;AAEA,OAAO,IAAMC,OAAO,GAAGP,KAAK,CAACQ,aAAN,EAAhB;;AAEP,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACpC;AADoC,kBAEZT,QAAQ,CAACU,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,IAAjC,CAFI;AAAA;AAAA,MAE7BC,IAF6B;AAAA,MAEvBC,OAFuB,kBAGpC;;;AAHoC,oBAILX,UAAU,CAACE,YAAD,EAAe,EAAf,CAJL;AAAA;AAAA,MAI7BU,UAJ6B;AAAA,MAIjBC,QAJiB;;AAAA,mBAMJf,QAAQ,CAAC,EAAD,CANJ;AAAA;AAAA,MAM7BgB,QAN6B;AAAA,MAMnBC,WANmB,kBAQpC;;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1BhB,IAAAA,EAAE,CAACiB,UAAH,CAAc,OAAd,EAAuBC,UAAvB,CAAkC,UAAAC,QAAQ,EAAI;AAC5C,UAAMC,OAAO,GAAGD,QAAQ,CAACE,UAAT,EAAhB;AACA,UAAMC,SAAS,GAAGF,OAAO,CAACG,GAAR,CAAY,UAAAC,IAAI;AAAA,eAAK;AAACC,UAAAA,EAAE,EAACD,IAAI,CAACE,GAAL,CAASD,EAAb;AAAiBE,UAAAA,IAAI,EAAEH,IAAI,CAACE,GAAL,CAASE,IAAT,GAAgBD;AAAvC,SAAL;AAAA,OAAhB,CAAlB;AACAf,MAAAA,QAAQ,CAAC;AAACiB,QAAAA,IAAI,EAAE3B,SAAP;AAAkBc,QAAAA,KAAK,EAALA;AAAlB,OAAD,CAAR;AACD,KAJD;AAKD,GAND;;AAQA,SACE,oBAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AACLP,MAAAA,IAAI,EAAJA,IADK;AAELO,MAAAA,KAAK,EAAEL,UAFF;AAGLE,MAAAA,QAAQ,EAARA,QAHK;AAILE,MAAAA,QAAQ,EAARA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGT,QARH,CADF;AAYD,CA9BD;;AAgCA,eAAeD,WAAf","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\r\n\r\nimport db from '../firebase';\r\nimport { roomsReducer, ADD_ROOMS } from './reducers';\r\n\r\nexport const Context = React.createContext();\r\n\r\nconst GlobalState = ({ children }) => {\r\n  // set global state\r\n  const [user, setUser] = useState(localStorage.getItem('user') || null);\r\n  //\r\n  const [roomsState, dispatch] = useReducer(roomsReducer, []);\r\n\r\n  const [openRoom, setOpenRoom] = useState({});\r\n\r\n  // define functions\r\n\r\n  const addRooms = (rooms) => {\r\n    db.collection('rooms').onSnapshot(snapshot => {\r\n      const changes = snapshot.docChanges();\r\n      const snapArray = changes.map(item => ({id:item.doc.id, name: item.doc.data().name}));\r\n      dispatch({type: ADD_ROOMS, rooms})\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        user,\r\n        rooms: roomsState,\r\n        openRoom,\r\n        addRooms\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default GlobalState;"]},"metadata":{},"sourceType":"module"}