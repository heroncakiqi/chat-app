{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\HP\\\\Desktop\\\\chat-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\HP\\\\Desktop\\\\chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\HP\\\\Desktop\\\\chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\chat-app\\\\src\\\\components\\\\ChatWindow.js\";\nimport React, { useContext, useEffect } from 'react';\nimport firestore from '../firebase';\nimport Message from './Message';\nimport { Context } from '../context/GlobalState';\n\nvar ChatWindow = function ChatWindow(props) {\n  var _useContext = useContext(Context),\n      messages = _useContext.messages,\n      setMessagesReducer = _useContext.setMessagesReducer,\n      openRoom = _useContext.openRoom;\n\n  useEffect(function () {\n    var unsubscribe = firestore.collection('rooms').doc(openRoom.id).collection('messages').orderBy('date').onSnapshot(\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(snapshot) {\n        var changes, messagesArray;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                changes = snapshot.docChanges();\n                messagesArray = changes.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee(item) {\n                    var message;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            message = _objectSpread({}, item.doc.data());\n                            _context.next = 3;\n                            return message;\n\n                          case 3:\n                            return _context.abrupt(\"return\", _context.sent);\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n                _context2.t0 = console;\n                _context2.next = 5;\n                return messagesArray[0];\n\n              case 5:\n                _context2.t1 = _context2.sent;\n\n                _context2.t0.log.call(_context2.t0, _context2.t1);\n\n                setMessagesReducer(messagesArray, function () {\n                  var element = document.getElementById(\"window\");\n                  element.scrollTop = element.scrollHeight;\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    return function () {\n      unsubscribe();\n    };\n  }, [openRoom]);\n  return React.createElement(\"div\", {\n    className: \"chat-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, messages.map(function (item, index) {\n    return React.createElement(Message, {\n      key: index,\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default ChatWindow;","map":{"version":3,"sources":["C:\\Users\\HP\\Desktop\\chat-app\\src\\components\\ChatWindow.js"],"names":["React","useContext","useEffect","firestore","Message","Context","ChatWindow","props","messages","setMessagesReducer","openRoom","unsubscribe","collection","doc","id","orderBy","onSnapshot","snapshot","changes","docChanges","messagesArray","map","item","message","data","console","log","element","document","getElementById","scrollTop","scrollHeight","index"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,wBAAxB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAAA,oBACuBN,UAAU,CAACI,OAAD,CADjC;AAAA,MACnBG,QADmB,eACnBA,QADmB;AAAA,MACTC,kBADS,eACTA,kBADS;AAAA,MACWC,QADX,eACWA,QADX;;AAG1BR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,WAAW,GAAGR,SAAS,CAACS,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCH,QAAQ,CAACI,EAA3C,EAA+CF,UAA/C,CAA0D,UAA1D,EACnBG,OADmB,CACX,MADW,EACHC,UADG;AAAA;AAAA;AAAA;AAAA;AAAA,+BACQ,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,gBAAAA,OADoB,GACVD,QAAQ,CAACE,UAAT,EADU;AAEpBC,gBAAAA,aAFoB,GAEJF,OAAO,CAACG,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAY,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,4BAAAA,OAD0B,qBAE3BD,IAAI,CAACT,GAAL,CAASW,IAAT,EAF2B;AAAA;AAAA,mCAInBD,OAJmB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAZ;;AAAA;AAAA;AAAA;AAAA,oBAFI;AAAA,+BAQ1BE,OAR0B;AAAA;AAAA,uBAQRL,aAAa,CAAC,CAAD,CARL;;AAAA;AAAA;;AAAA,6BAQlBM,GARkB;;AAS1BjB,gBAAAA,kBAAkB,CAACW,aAAD,EAAgB,YAAM;AACtC,sBAAMO,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAhB;AACAF,kBAAAA,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACI,YAA5B;AACD,iBAHiB,CAAlB;;AAT0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADR;;AAAA;AAAA;AAAA;AAAA,QAApB;AAeA,WAAO,YAAM;AACXpB,MAAAA,WAAW;AACZ,KAFD;AAGD,GAnBQ,EAmBP,CAACD,QAAD,CAnBO,CAAT;AAqBA,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,CAACa,GAAT,CAAa,UAACC,IAAD,EAAOU,KAAP;AAAA,WAAiB,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,KAAd;AAAqB,MAAA,IAAI,EAAEV,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;AAAA,GAAb,CADH,CADF;AAKD,CA7BD;;AAgCA,eAAehB,UAAf","sourcesContent":["import React,{  useContext,useEffect } from 'react';\r\nimport firestore from '../firebase';\r\n\r\nimport Message from './Message';\r\nimport { Context } from '../context/GlobalState';\r\n\r\nconst ChatWindow = props => {\r\n  const {messages, setMessagesReducer, openRoom} = useContext(Context);\r\n  \r\n  useEffect(() => {\r\n    const unsubscribe = firestore.collection('rooms').doc(openRoom.id).collection('messages')\r\n    .orderBy('date').onSnapshot(async snapshot => {\r\n      const changes = snapshot.docChanges();\r\n      const messagesArray = changes.map(async item => {\r\n        const message = {\r\n          ...item.doc.data()\r\n        }\r\n        return await message\r\n      });\r\n      console.log(await messagesArray[0]);\r\n      setMessagesReducer(messagesArray, () => {\r\n        const element = document.getElementById(\"window\");\r\n        element.scrollTop = element.scrollHeight\r\n      });\r\n    });\r\n    return () => {\r\n      unsubscribe();\r\n    }\r\n  },[openRoom]);\r\n\r\n  return (\r\n    <div className=\"chat-window\">\r\n      {messages.map((item, index) => <Message key={index} item={item} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ChatWindow"]},"metadata":{},"sourceType":"module"}