{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\HP\\\\Desktop\\\\chat-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\HP\\\\Desktop\\\\chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\HP\\\\Desktop\\\\chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\chat-app\\\\src\\\\context\\\\GlobalState.js\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport db from '../firebase';\nimport { roomsReducer } from './reducers';\nexport var Context = React.createContext();\n\nvar GlobalState = function GlobalState(_ref) {\n  var children = _ref.children;\n\n  // set global state\n  var _useState = useState(localStorage.getItem('user') || null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rooms = _useState4[0],\n      setRooms = _useState4[1];\n\n  var _useReducer = useReducer(roomsReducer),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      roomsState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  console.log(roomsState);\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      openRoom = _useState6[0],\n      setOpenRoom = _useState6[1]; // define functions\n\n\n  var fetchRooms =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchRooms() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSetRooms =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(newRoom) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSetRooms(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var CreateChatRoom =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function CreateChatRoom() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Context.Provider, {\n    value: {\n      user: user,\n      rooms: rooms,\n      openRoom: openRoom,\n      fetchRooms: fetchRooms,\n      CreateChatRoom: CreateChatRoom,\n      handleSetRooms: handleSetRooms\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, children);\n};\n\nexport default GlobalState;","map":{"version":3,"sources":["C:\\Users\\HP\\Desktop\\chat-app\\src\\context\\GlobalState.js"],"names":["React","useState","useEffect","useReducer","db","roomsReducer","Context","createContext","GlobalState","children","localStorage","getItem","user","setUser","rooms","setRooms","roomsState","dispatch","console","log","openRoom","setOpenRoom","fetchRooms","handleSetRooms","newRoom","CreateChatRoom"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,OAAOC,EAAP,MAAe,aAAf;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,OAAO,IAAMC,OAAO,GAAGN,KAAK,CAACO,aAAN,EAAhB;;AAEP,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACpC;AADoC,kBAEZR,QAAQ,CAACS,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,IAAjC,CAFI;AAAA;AAAA,MAE7BC,IAF6B;AAAA,MAEvBC,OAFuB;;AAAA,mBAIVZ,QAAQ,CAAC,EAAD,CAJE;AAAA;AAAA,MAI7Ba,KAJ6B;AAAA,MAItBC,QAJsB;;AAAA,oBAKLZ,UAAU,CAACE,YAAD,CALL;AAAA;AAAA,MAK7BW,UAL6B;AAAA,MAKjBC,QALiB;;AAOpCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;;AAPoC,mBASJf,QAAQ,CAAC,EAAD,CATJ;AAAA;AAAA,MAS7BmB,QAT6B;AAAA,MASnBC,WATmB,kBAWpC;;;AACA,MAAMC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVA,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAEA,MAAMC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdD,cAAc;AAAA;AAAA;AAAA,KAApB;;AAKA,MAAME,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdA,cAAc;AAAA;AAAA;AAAA,KAApB;;AAEA,SACE,oBAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AACLb,MAAAA,IAAI,EAAJA,IADK;AAELE,MAAAA,KAAK,EAALA,KAFK;AAGLM,MAAAA,QAAQ,EAARA,QAHK;AAILE,MAAAA,UAAU,EAAVA,UAJK;AAKLG,MAAAA,cAAc,EAAdA,cALK;AAMLF,MAAAA,cAAc,EAAdA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGd,QAVH,CADF;AAcD,CAnCD;;AAqCA,eAAeD,WAAf","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\r\n\r\nimport db from '../firebase';\r\nimport { roomsReducer } from './reducers';\r\n\r\nexport const Context = React.createContext();\r\n\r\nconst GlobalState = ({ children }) => {\r\n  // set global state\r\n  const [user, setUser] = useState(localStorage.getItem('user') || null);\r\n\r\n  const [rooms, setRooms] = useState([]);\r\n  const [roomsState, dispatch] = useReducer(roomsReducer);\r\n\r\n  console.log(roomsState);\r\n\r\n  const [openRoom, setOpenRoom] = useState({});\r\n\r\n  // define functions\r\n  const fetchRooms = async () => {}\r\n\r\n  const handleSetRooms = async (newRoom) => {\r\n\r\n  }\r\n \r\n\r\n  const CreateChatRoom = async () => {}\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        user,\r\n        rooms,\r\n        openRoom,\r\n        fetchRooms,\r\n        CreateChatRoom,\r\n        handleSetRooms\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default GlobalState;"]},"metadata":{},"sourceType":"module"}