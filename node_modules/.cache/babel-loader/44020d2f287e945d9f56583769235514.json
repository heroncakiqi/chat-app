{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HP\\\\Desktop\\\\chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\chat-app\\\\src\\\\context\\\\GlobalState.js\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport firestore from '../firebase';\nimport { roomsReducer, selectRoomReducer, messagesReducer, userReducer, ADD_ROOMS, SELECT_ROOM, SET_MESSAGES, CLEAR_MESSAGES, SET_USER } from './reducers';\nexport var Context = React.createContext();\n\nvar GlobalState = function GlobalState(_ref) {\n  var children = _ref.children;\n\n  // set global state\n  var _useReducer = useReducer(userReducer, localStorage.getItem('user')),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      user = _useReducer2[0],\n      setUser = _useReducer2[1];\n\n  var _useReducer3 = useReducer(roomsReducer, []),\n      _useReducer4 = _slicedToArray(_useReducer3, 2),\n      roomsState = _useReducer4[0],\n      setRooms = _useReducer4[1];\n\n  var _useReducer5 = useReducer(selectRoomReducer, {}),\n      _useReducer6 = _slicedToArray(_useReducer5, 2),\n      openRoom = _useReducer6[0],\n      setOpenRoom = _useReducer6[1];\n\n  var _useReducer7 = useReducer(messagesReducer, []),\n      _useReducer8 = _slicedToArray(_useReducer7, 2),\n      messages = _useReducer8[0],\n      setMessages = _useReducer8[1];\n\n  var setSetUser = function setSetUser(user) {\n    setUser({\n      type: SET_USER,\n      payload: user\n    });\n  }; // define actions\n\n\n  var addRooms = function addRooms(rooms) {\n    firestore.collection('rooms').onSnapshot(function (snapshot) {\n      var changes = snapshot.docChanges();\n      var snapArray = changes.map(function (item) {\n        return {\n          id: item.doc.id,\n          name: item.doc.data().name\n        };\n      });\n      setRooms({\n        type: ADD_ROOMS,\n        rooms: snapArray\n      });\n    });\n  };\n\n  var selectRoom = function selectRoom(id) {\n    var room = roomsState.find(function (item) {\n      return item.id == id;\n    });\n    setOpenRoom({\n      type: SELECT_ROOM,\n      payload: room\n    });\n  };\n\n  var setMessagesReducer = function setMessagesReducer(messageArray, cb) {\n    setMessages({\n      type: SET_MESSAGES,\n      payload: messageArray\n    });\n    cb();\n  };\n\n  var clearMessages = function clearMessages() {\n    setMessages({\n      type: CLEAR_MESSAGES\n    });\n  };\n\n  var addSingleRoom = function addSingleRoom(name) {\n    firestore.collection('rooms').add({\n      name: name\n    });\n  };\n\n  var sendMessage = function sendMessage(input) {\n    firestore.collection('rooms').doc(openRoom.id).collection('messages').add({\n      author: user,\n      text: input,\n      date: Date.now()\n    });\n  };\n\n  return React.createElement(Context.Provider, {\n    value: {\n      user: user,\n      rooms: roomsState,\n      openRoom: openRoom,\n      addRooms: addRooms,\n      addSingleRoom: addSingleRoom,\n      selectRoom: selectRoom,\n      messages: messages,\n      sendMessage: sendMessage,\n      clearMessages: clearMessages,\n      setMessagesReducer: setMessagesReducer,\n      setSetUser: setSetUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, children);\n};\n\nexport default GlobalState;","map":{"version":3,"sources":["C:\\Users\\HP\\Desktop\\chat-app\\src\\context\\GlobalState.js"],"names":["React","useState","useEffect","useReducer","firestore","roomsReducer","selectRoomReducer","messagesReducer","userReducer","ADD_ROOMS","SELECT_ROOM","SET_MESSAGES","CLEAR_MESSAGES","SET_USER","Context","createContext","GlobalState","children","localStorage","getItem","user","setUser","roomsState","setRooms","openRoom","setOpenRoom","messages","setMessages","setSetUser","type","payload","addRooms","rooms","collection","onSnapshot","snapshot","changes","docChanges","snapArray","map","item","id","doc","name","data","selectRoom","room","find","setMessagesReducer","messageArray","cb","clearMessages","addSingleRoom","add","sendMessage","input","author","text","date","Date","now"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\r\n\r\nimport firestore from '../firebase';\r\nimport { \r\n  roomsReducer, \r\n  selectRoomReducer, \r\n  messagesReducer, \r\n  userReducer,\r\n  ADD_ROOMS, SELECT_ROOM, SET_MESSAGES, CLEAR_MESSAGES, SET_USER\r\n} from './reducers';\r\n\r\nexport const Context = React.createContext();\r\n\r\nconst GlobalState = ({ children }) => {\r\n  // set global state\r\n  const [user, setUser] = useReducer(userReducer, localStorage.getItem('user'));\r\n\r\n  const [roomsState, setRooms] = useReducer(roomsReducer, []);\r\n\r\n  const [openRoom, setOpenRoom] = useReducer(selectRoomReducer, {});\r\n\r\n  const [messages, setMessages] = useReducer(messagesReducer, []);\r\n\r\n  const setSetUser = user => {\r\n    setUser({type: SET_USER, payload: user})\r\n  }\r\n\r\n  // define actions\r\n  const addRooms = (rooms) => {\r\n    firestore.collection('rooms').onSnapshot((snapshot) => {\r\n      const changes = snapshot.docChanges();\r\n      const snapArray = changes.map(item => ({id:item.doc.id, name: item.doc.data().name}));\r\n      setRooms({type: ADD_ROOMS, rooms: snapArray})\r\n    });\r\n  }\r\n\r\n  const selectRoom = id => {\r\n    const room = roomsState.find(item => item.id == id);\r\n    setOpenRoom({type: SELECT_ROOM, payload: room});\r\n  }\r\n\r\n\r\n  const setMessagesReducer = (messageArray, cb) => {\r\n    setMessages({type: SET_MESSAGES, payload: messageArray});\r\n    cb();\r\n  }\r\n  \r\n  const clearMessages = () => {\r\n    setMessages({type: CLEAR_MESSAGES});\r\n  }\r\n\r\n  const addSingleRoom = (name) => {\r\n    firestore.collection('rooms').add({\r\n      name\r\n    })\r\n  }\r\n\r\n  const sendMessage = input => {\r\n    firestore.collection('rooms').doc(openRoom.id).collection('messages').add({\r\n      author: user,\r\n      text: input,\r\n      date: Date.now()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        user,\r\n        rooms: roomsState,\r\n        openRoom,\r\n        addRooms,\r\n        addSingleRoom,\r\n        selectRoom,\r\n        messages,\r\n        sendMessage,\r\n        clearMessages,\r\n        setMessagesReducer,\r\n        setSetUser\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default GlobalState;"]},"metadata":{},"sourceType":"module"}